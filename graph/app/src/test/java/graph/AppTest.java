/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void addNodeToTheGraph() {
        Graph graph=new Graph();
        assertTrue(graph.size()==0);
        graph.addNode("A");
        assertTrue(graph.size()>0);
    }

    @Test void AddEdgeTograph() {
        Graph graph=new Graph();

        graph.addNode("A");
        graph.addNode("B");

        graph.addEdge("A","B");

        assertTrue(graph.getNeighbors(new Vertex("A")).toString().contains("B"));

        assertTrue(graph.getNeighbors(new Vertex("B")).toString().contains("A"));

    }

    @Test void returnAllNodes() {
        Graph graph=new Graph();

        graph.addNode("A");
        graph.addNode("B");

        graph.addEdge("A","B");

        assertTrue(graph.getNodes().toString().contains("B"));

        assertTrue(graph.getNodes().toString().contains("A"));

    }

    @Test void returnNeigbors() {
        Graph graph=new Graph();

        graph.addNode("A");
        graph.addNode("B");
        graph.addNode("C");

        graph.addEdge("A","B");
        graph.addEdge("A","C");


        assertTrue(graph.getNeighbors(new Vertex("A")).toString().contains("B"));

        assertTrue(graph.getNeighbors(new Vertex("A")).toString().contains("C"));


    }

    @Test void returnTheSize() {
        Graph graph=new Graph();

        graph.addNode("A");
        graph.addNode("B");
        graph.addNode("C");


        assertTrue(graph.size()==3);



    }

    @Test void oneNodeAndAddEdge() {
        Graph graph=new Graph();

        graph.addNode("A");

        graph.addEdge("A","B");

        System.out.println(graph.getAdjVertices());




    }

    @Test void isEmpty() {
        Graph graph=new Graph();

        String expected=null;
        String actual=graph.isEmpty();
      assertEquals(expected, actual);



    }

}
