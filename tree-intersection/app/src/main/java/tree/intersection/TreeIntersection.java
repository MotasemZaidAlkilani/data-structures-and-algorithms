/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tree.intersection;

import com.sun.source.tree.BinaryTree;

import java.util.HashMap;

public class TreeIntersection {

    public static void main(String[] args) {

    }

    public static HashMap tree_intersection(binaryTree firstTree, binaryTree secondTree) {
        HashMap<String, Integer> hash =new HashMap() ;
         depthTreePreOrder(firstTree.root, secondTree.root,hash);
        return hash;
    }

    public static HashMap<String,Integer> depthTreePreOrder(treeNode firstTreeNode, treeNode secondTreeNode,HashMap hash) {
        if (firstTreeNode == null) {
            return hash;
        }
        if (secondTreeNode == null) {
            return hash;
        }
        if (firstTreeNode.getValue() == secondTreeNode.getValue()) {
            hash.put(firstTreeNode.getValue(),firstTreeNode.getValue());
        }
        depthTreePreOrder(firstTreeNode.leftNode, secondTreeNode.leftNode, hash);
        depthTreePreOrder(firstTreeNode.rightNode, secondTreeNode.rightNode, hash);
return hash;
    }


}


